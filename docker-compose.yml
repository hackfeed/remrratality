version: "3.8"

services:
  redis:
    image: redis:6.2
    container_name: remrratality-redis
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379

  postgres:
    image: postgres:14.0
    container_name: remrratality-postgres
    env_file:
      - .env
    volumes:
      - ./data/init/postgres/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
      - ./data/db/postgres:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432

  mongo:
    image: mongo:5.0
    container_name: remrratality-mongo
    env_file:
      - .env
    volumes:
      - ./data/init/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/db/mongo:/data/db
    ports:
      - ${MONGO_PORT}:27017

  adminer:
    image: dockette/adminer:full
    container_name: remrratality-adminer
    env_file:
      - .env
    ports:
      - 8000:80

  influxdb:
    image: influxdb:1.8
    container_name: remrratality-influxdb
    env_file:
      - .env
    ports:
      - ${INFLUXDB_PORT}:8086

  grafana:
    image: grafana/grafana:8.1.5
    container_name: remrratality-grafana
    env_file:
      - .env
    volumes:
      - ./testing/grafana:/etc/grafana/provisioning/
    ports:
      - ${GF_PORT}:3000

  k6:
    image: loadimpact/k6:0.34.1
    container_name: remrratality-k6
    env_file:
      - .env
    volumes:
      - ./testing/k6/scripts:/scripts
    network_mode: host

  frontend_dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: remrratality-frontend-dev
    command: npm run serve
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 8001:8080

  frontend_prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: remrratality-frontend-prod
    ports:
      - 8002:80
      - 8003:443

  backend_dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: remrratality-backend-dev
    command: go run cmd/backend/main.go
    env_file:
      - .env.backend
    volumes:
      - ./backend:/app
    ports:
      - 8004:8080
    depends_on:
      - redis
      - postgres
      - mongo
      - adminer

  backend_prod1:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: remrratality-backend-prod1
    env_file:
      - .env.backend
    ports:
      - 8005:8080
    depends_on:
      - redis
      - postgres
      - mongo
      - adminer

  backend_prod2:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: remrratality-backend-prod2
    env_file:
      - .env.backend
    ports:
      - 8006:8080
    depends_on:
      - redis
      - postgres
      - mongo
      - adminer

  backend_prod3:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: remrratality-backend-prod3
    env_file:
      - .env.backend
    ports:
      - 8007:8080
    depends_on:
      - redis
      - postgres
      - mongo
      - adminer
