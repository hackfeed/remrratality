basePath: /api/v1
definitions:
  domain.File:
    properties:
      name:
        type: string
      uploaded_at:
        type: string
    type: object
  domain.TotalMRR:
    properties:
      churn:
        items:
          type: number
        type: array
      contraction:
        items:
          type: number
        type: array
      expansion:
        items:
          type: number
        type: array
      new:
        items:
          type: number
        type: array
      old:
        items:
          type: number
        type: array
      reactivation:
        items:
          type: number
        type: array
      total:
        items:
          type: number
        type: array
    type: object
  models.Period:
    properties:
      filename:
        example: filename.csv
        type: string
      period_end:
        example: "2021-01-01"
        type: string
      period_start:
        example: "2019-01-01"
        type: string
    required:
    - filename
    - period_end
    - period_start
    type: object
  models.Response:
    properties:
      message:
        type: string
    type: object
  models.ResponseSuccessAnalytics:
    properties:
      message:
        example: Analytics is loaded
        type: string
      months:
        items:
          type: string
        type: array
      mrr:
        $ref: '#/definitions/domain.TotalMRR'
    type: object
  models.ResponseSuccessAuth:
    properties:
      expires_at:
        type: integer
      id_token:
        type: string
      local_id:
        type: string
      message:
        type: string
    type: object
  models.ResponseSuccessLoadFiles:
    properties:
      files:
        items:
          $ref: '#/definitions/domain.File'
        type: array
      message:
        example: Files are loaded
        type: string
    type: object
  models.ResponseSuccessSaveFile:
    properties:
      filename:
        example: filename.csv
        type: string
      message:
        example: File is uploaded
        type: string
    type: object
  models.User:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
host: remrratality.com:8003
info:
  contact:
    email: hackfeed@yandex.ru
    name: Sergey "hackfeed" Kononenko
    url: https://hackfeed.github.io
  description: API for getting MRR analytics of your app's money flow.
  license:
    name: GPL-3.0 License
    url: http://www.gnu.org/licenses/gpl-3.0.html
  title: remrratality API
  version: "1.0"
paths:
  /analytics/mrr:
    post:
      consumes:
      - application/json
      description: Getting MRR analytics data with all components for given period
      parameters:
      - description: Parameters for MRR analytics
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Period'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessAnalytics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get MRR analytics data
      tags:
      - analytics
  /files:
    get:
      consumes:
      - application/json
      description: Loading files' names, uploaded by user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessLoadFiles'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Loading user's files
      tags:
      - files
    post:
      consumes:
      - application/json
      description: Saving file locally on the server and parsing its content to database
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessSaveFile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Saving user's file
      tags:
      - files
  /files/{filename}:
    delete:
      consumes:
      - application/json
      description: Deleting file and cleaning database
      parameters:
      - description: File to delete
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Deleting user's file
      tags:
      - files
  /login:
    post:
      consumes:
      - application/json
      description: Logging user in by retrieving his data from the database
      parameters:
      - description: User's email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Logging user in
      tags:
      - login
  /signup:
    post:
      consumes:
      - application/json
      description: Signing user up by adding him to the database
      parameters:
      - description: User's email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseSuccessAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Signing user up
      tags:
      - signup
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
